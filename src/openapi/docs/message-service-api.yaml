openapi: 3.0.0
info:
  title: Message Service API
  version: 1.0.0
  description: API for managing messages and tokens

tags:
  - name: messages
    description: Endpoints for message management
  - name: tokens
    description: Endpoints for authentication token management

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Message:
      type: object
      properties:
        uid:
          type: string
        sent_at:
          type: string
          format: date-time
        sender:
          type: string
        channel_id:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    MessageCreate:
      type: object
      required:
        - uid
        - sent_at
        - sender
        - channel_id
        - content
      properties:
        uid:
          type: string
        sent_at:
          type: string
          format: date-time
        sender:
          type: string
        channel_id:
          type: string
        content:
          type: string

    Token:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
        name:
          type: string
          description: Token identifier name
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    TokenCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Token identifier name
        expires_in:
          type: integer
          description: Token expiration period in seconds
          default: 2592000 # 30 days

    TokenResponse:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
        name:
          type: string
        expires_at:
          type: string
          format: date-time

security:
  - BearerAuth: []

paths:
  /api/messages:
    post:
      tags:
        - messages
      summary: Create message
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageCreate"
      responses:
        "201":
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: Invalid request
        "401":
          description: Authentication required

  /api/messages/{uid}:
    delete:
      tags:
        - messages
      summary: Delete message
      security:
        - BearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          description: Message UID to delete
          schema:
            type: string
      responses:
        "204":
          description: Message deleted successfully
        "401":
          description: Authentication required
        "404":
          description: Message not found

  /api/messages/search:
    get:
      tags:
        - messages
      summary: Search messages
      security:
        - BearerAuth: []
      parameters:
        - name: channel_id
          in: query
          schema:
            type: string
        - name: sender
          in: query
          schema:
            type: string
        - name: from_date
          in: query
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "401":
          description: Authentication required

  /api/tokens:
    post:
      tags:
        - tokens
      summary: Create new token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenCreate"
      responses:
        "201":
          description: Token created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Invalid request

    get:
      tags:
        - tokens
      summary: Get token list
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Token"
        "401":
          description: Authentication required

  /api/tokens/{id}:
    delete:
      tags:
        - tokens
      summary: Invalidate token
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Token ID to invalidate
          schema:
            type: string
      responses:
        "204":
          description: Token invalidated successfully
        "401":
          description: Authentication required
        "404":
          description: Token not found
